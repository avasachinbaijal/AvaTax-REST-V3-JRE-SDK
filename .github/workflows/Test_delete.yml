name: Publish to Maven Central Repository

on: 
  workflow_dispatch:

jobs:
  test:
    name: Test Java code with different Java versions
    runs-on: ubuntu-20.04
    # Release only if last commit message contains keyword 'PUBLISH' (not case-sensitive)
    #if: "contains(github.event.head_commit.message, 'PUBLISH')"
    strategy:
      matrix:
        java-version: [16]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java with Maven
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'     
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            clean test

  publish:
    needs: test
    name: Bump Maven version, release on GitHub and Maven Central
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # We need all tags and commits to be able to determine new bump type
          fetch-depth: 0

      - name: Set up Java with Maven
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Install GPG secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import           
          
      - name: Publish to Maven Central
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            -DskipTests \
            -Prelease \
            deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
